<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
	"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>WinMerge File Compare Report</title>
<style type="text/css">
<!--
table {margin: 0; border: 1px solid #a0a0a0; box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.15);}
td,th {word-break: break-all; font-size: 12pt;padding: 0 3px;}
tr { vertical-align: top; }
.title {color: white; background-color: blue; vertical-align: top; padding: 4px 4px; background: linear-gradient(mediumblue, darkblue);}
.sf3b2 {color: #000000; background-color: #ffffff; }
.sf3b5 {color: #000000; background-color: #0078d7; }
.sf3b14 {color: #000000; background-color: #ffa0a0; }
.sf3b16 {color: #000000; background-color: #f1e2ad; }
.sf3b18 {color: #000000; background-color: #ffaa82; }
.sf3b19 {color: #000000; background-color: #c8816c; }
.sf6b2 {color: #ffffff; background-color: #ffffff; }
.sf6b5 {color: #ffffff; background-color: #0078d7; }
.sf6b14 {color: #ffffff; background-color: #ffa0a0; }
.sf6b16 {color: #ffffff; background-color: #f1e2ad; }
.sf6b18 {color: #ffffff; background-color: #ffaa82; }
.sf6b19 {color: #ffffff; background-color: #c8816c; }
.sf7b2 {color: #0000ff; background-color: #ffffff; font-weight: bold; }
.sf7b5 {color: #0000ff; background-color: #0078d7; font-weight: bold; }
.sf7b14 {color: #0000ff; background-color: #ffa0a0; font-weight: bold; }
.sf7b16 {color: #0000ff; background-color: #f1e2ad; font-weight: bold; }
.sf7b18 {color: #0000ff; background-color: #ffaa82; font-weight: bold; }
.sf7b19 {color: #0000ff; background-color: #c8816c; font-weight: bold; }
.sf8b2 {color: #800080; background-color: #ffffff; }
.sf8b5 {color: #800080; background-color: #0078d7; }
.sf8b14 {color: #800080; background-color: #ffa0a0; }
.sf8b16 {color: #800080; background-color: #f1e2ad; }
.sf8b18 {color: #800080; background-color: #ffaa82; }
.sf8b19 {color: #800080; background-color: #c8816c; }
.sf9b2 {color: #008000; background-color: #ffffff; }
.sf9b5 {color: #008000; background-color: #0078d7; }
.sf9b14 {color: #008000; background-color: #ffa0a0; }
.sf9b16 {color: #008000; background-color: #f1e2ad; }
.sf9b18 {color: #008000; background-color: #ffaa82; }
.sf9b19 {color: #008000; background-color: #c8816c; }
.sf10b2 {color: #ff0000; background-color: #ffffff; }
.sf10b5 {color: #ff0000; background-color: #0078d7; }
.sf10b14 {color: #ff0000; background-color: #ffa0a0; }
.sf10b16 {color: #ff0000; background-color: #f1e2ad; }
.sf10b18 {color: #ff0000; background-color: #ffaa82; }
.sf10b19 {color: #ff0000; background-color: #c8816c; }
.sf11b2 {color: #606060; background-color: #ffffff; }
.sf11b5 {color: #606060; background-color: #0078d7; }
.sf11b14 {color: #606060; background-color: #ffa0a0; }
.sf11b16 {color: #606060; background-color: #f1e2ad; }
.sf11b18 {color: #606060; background-color: #ffaa82; }
.sf11b19 {color: #606060; background-color: #c8816c; }
.sf12b2 {color: #800000; background-color: #ffffff; }
.sf12b5 {color: #800000; background-color: #0078d7; }
.sf12b14 {color: #800000; background-color: #ffa0a0; }
.sf12b16 {color: #800000; background-color: #f1e2ad; }
.sf12b18 {color: #800000; background-color: #ffaa82; }
.sf12b19 {color: #800000; background-color: #c8816c; }
.sf13b2 {color: #0080c0; background-color: #ffffff; }
.sf13b5 {color: #0080c0; background-color: #0078d7; }
.sf13b14 {color: #0080c0; background-color: #ffa0a0; }
.sf13b16 {color: #0080c0; background-color: #f1e2ad; }
.sf13b18 {color: #0080c0; background-color: #ffaa82; }
.sf13b19 {color: #0080c0; background-color: #c8816c; }
.sf15b2 {color: #000000; background-color: #ffffff; }
.sf15b5 {color: #000000; background-color: #0078d7; }
.sf15b14 {color: #000000; background-color: #ffa0a0; }
.sf15b16 {color: #000000; background-color: #f1e2ad; }
.sf15b18 {color: #000000; background-color: #ffaa82; }
.sf15b19 {color: #000000; background-color: #c8816c; }
.sf17b2 {color: #000000; background-color: #ffffff; }
.sf17b5 {color: #000000; background-color: #0078d7; }
.sf17b14 {color: #000000; background-color: #ffa0a0; }
.sf17b16 {color: #000000; background-color: #f1e2ad; }
.sf17b18 {color: #000000; background-color: #ffaa82; }
.sf17b19 {color: #000000; background-color: #c8816c; }
.sf20b2 {color: #000080; background-color: #ffffff; }
.sf20b5 {color: #000080; background-color: #0078d7; }
.sf20b14 {color: #000080; background-color: #ffa0a0; }
.sf20b16 {color: #000080; background-color: #f1e2ad; }
.sf20b18 {color: #000080; background-color: #ffaa82; }
.sf20b19 {color: #000080; background-color: #c8816c; }
.sf21b2 {color: #0080c0; background-color: #ffffff; }
.sf21b5 {color: #0080c0; background-color: #0078d7; }
.sf21b14 {color: #0080c0; background-color: #ffa0a0; }
.sf21b16 {color: #0080c0; background-color: #f1e2ad; }
.sf21b18 {color: #0080c0; background-color: #ffaa82; }
.sf21b19 {color: #0080c0; background-color: #c8816c; }
.sf3b2i {color: #ababab; background-color: #ffffff; }
.sf3b5i {color: #005190; background-color: #0078d7; }
.sf3b14i {color: #ab6b6b; background-color: #ffa0a0; }
.sf3b16i {color: #a19774; background-color: #f1e2ad; }
.sf3b18i {color: #ab7257; background-color: #ffaa82; }
.sf3b19i {color: #865749; background-color: #c8816c; }
.sf6b2i {color: #ffffff; background-color: #ffffff; }
.sf6b5i {color: #54a4e4; background-color: #0078d7; }
.sf6b14i {color: #ffbfbf; background-color: #ffa0a0; }
.sf6b16i {color: #f5ebc8; background-color: #f1e2ad; }
.sf6b18i {color: #ffc6ab; background-color: #ffaa82; }
.sf6b19i {color: #daaa9c; background-color: #c8816c; }
.sf7b2i {color: #ababff; background-color: #ffffff; font-weight: bold; }
.sf7b5i {color: #0051e4; background-color: #0078d7; font-weight: bold; }
.sf7b14i {color: #ab6bbf; background-color: #ffa0a0; font-weight: bold; }
.sf7b16i {color: #a197c8; background-color: #f1e2ad; font-weight: bold; }
.sf7b18i {color: #ab72ab; background-color: #ffaa82; font-weight: bold; }
.sf7b19i {color: #86579c; background-color: #c8816c; font-weight: bold; }
.sf8b2i {color: #d5abd5; background-color: #ffffff; }
.sf8b5i {color: #2a51bb; background-color: #0078d7; }
.sf8b14i {color: #d56b96; background-color: #ffa0a0; }
.sf8b16i {color: #cc979f; background-color: #f1e2ad; }
.sf8b18i {color: #d57282; background-color: #ffaa82; }
.sf8b19i {color: #b15772; background-color: #c8816c; }
.sf9b2i {color: #abd5ab; background-color: #ffffff; }
.sf9b5i {color: #007a90; background-color: #0078d7; }
.sf9b14i {color: #ab966b; background-color: #ffa0a0; }
.sf9b16i {color: #a1c274; background-color: #f1e2ad; }
.sf9b18i {color: #ab9d57; background-color: #ffaa82; }
.sf9b19i {color: #868149; background-color: #c8816c; }
.sf10b2i {color: #ffabab; background-color: #ffffff; }
.sf10b5i {color: #545190; background-color: #0078d7; }
.sf10b14i {color: #ff6b6b; background-color: #ffa0a0; }
.sf10b16i {color: #f59774; background-color: #f1e2ad; }
.sf10b18i {color: #ff7257; background-color: #ffaa82; }
.sf10b19i {color: #da5749; background-color: #c8816c; }
.sf11b2i {color: #cbcbcb; background-color: #ffffff; }
.sf11b5i {color: #1f71b0; background-color: #0078d7; }
.sf11b14i {color: #cb8b8b; background-color: #ffa0a0; }
.sf11b16i {color: #c1b794; background-color: #f1e2ad; }
.sf11b18i {color: #cb9277; background-color: #ffaa82; }
.sf11b19i {color: #a67769; background-color: #c8816c; }
.sf12b2i {color: #d5abab; background-color: #ffffff; }
.sf12b5i {color: #2a5190; background-color: #0078d7; }
.sf12b14i {color: #d56b6b; background-color: #ffa0a0; }
.sf12b16i {color: #cc9774; background-color: #f1e2ad; }
.sf12b18i {color: #d57257; background-color: #ffaa82; }
.sf12b19i {color: #b15749; background-color: #c8816c; }
.sf13b2i {color: #abd5eb; background-color: #ffffff; }
.sf13b5i {color: #007ad0; background-color: #0078d7; }
.sf13b14i {color: #ab96aa; background-color: #ffa0a0; }
.sf13b16i {color: #a1c2b3; background-color: #f1e2ad; }
.sf13b18i {color: #ab9d96; background-color: #ffaa82; }
.sf13b19i {color: #868187; background-color: #c8816c; }
.sf15b2i {color: #ababab; background-color: #ffffff; }
.sf15b5i {color: #005190; background-color: #0078d7; }
.sf15b14i {color: #ab6b6b; background-color: #ffa0a0; }
.sf15b16i {color: #a19774; background-color: #f1e2ad; }
.sf15b18i {color: #ab7257; background-color: #ffaa82; }
.sf15b19i {color: #865749; background-color: #c8816c; }
.sf17b2i {color: #ababab; background-color: #ffffff; }
.sf17b5i {color: #005190; background-color: #0078d7; }
.sf17b14i {color: #ab6b6b; background-color: #ffa0a0; }
.sf17b16i {color: #a19774; background-color: #f1e2ad; }
.sf17b18i {color: #ab7257; background-color: #ffaa82; }
.sf17b19i {color: #865749; background-color: #c8816c; }
.sf20b2i {color: #ababd5; background-color: #ffffff; }
.sf20b5i {color: #0051bb; background-color: #0078d7; }
.sf20b14i {color: #ab6b96; background-color: #ffa0a0; }
.sf20b16i {color: #a1979f; background-color: #f1e2ad; }
.sf20b18i {color: #ab7282; background-color: #ffaa82; }
.sf20b19i {color: #865772; background-color: #c8816c; }
.sf21b2i {color: #abd5eb; background-color: #ffffff; }
.sf21b5i {color: #007ad0; background-color: #0078d7; }
.sf21b14i {color: #ab96aa; background-color: #ffa0a0; }
.sf21b16i {color: #a1c2b3; background-color: #f1e2ad; }
.sf21b18i {color: #ab9d96; background-color: #ffaa82; }
.sf21b19i {color: #868187; background-color: #c8816c; }
.ln {text-align: right; word-break: normal; color: #000000; background-color: #f0f0f0;}
-->
</style>
</head>
<body>
<table cellspacing="0" cellpadding="0" style="width:100%;">
<thead>
<tr>
<th colspan="2" class="title" style="width:50.000000%">C:\Users\lucas\Documents\2021_2\ED\ATIVIDADE_08-06\teste</th>
<th colspan="2" class="title" style="width:50.000000%">C:\Users\lucas\Documents\2021_2\ED\ATIVIDADE_08-06\teste1</th>
</tr>
</thead>
<tbody>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">#include &lt;iostream&gt;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">#include &lt;iostream&gt;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">#include &lt;fstream&gt;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">#include &lt;fstream&gt;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">#include &lt;string&gt;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">#include &lt;string&gt;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">#include &lt;cstring&gt;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">#include &lt;cstring&gt;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">#include "leCSV.h"</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">#include "leCSV.h"</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">#include "estrutura.h"</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">#include "estrutura.h"</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">using namespace std;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">using namespace std;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">//maiores valores em cada linha, obtidos a partir de outro programa que le o arquivo leCSV</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">//maiores valores em cada linha, obtidos a partir de outro programa que le o arquivo leCSV</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">class operacoes {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">class operacoes {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">private:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">private:</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; void funcaoImprime(ostream&amp; out, info&amp; aux);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; void funcaoImprime(ostream&amp; out, info&amp; aux);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">public:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">public:</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; void inserir();</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; void inserir(long pos);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; void exibir(long posIni, long posFim, bool imprimirTudo);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; void exibir(long posIni, long posFim, bool imprimirTudo);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; void buscar();</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; void trocar(long pos1, long pos2);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; void remover();</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; void alterar(long id);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; void alterar(long id);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">};</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">};</span></code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">void operacoes::funcaoImprime(ostream&amp; out, info&amp; aux) {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">void operacoes::funcaoImprime(ostream&amp; out, info&amp; aux) {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; out &lt;&lt; aux.id &lt;&lt; ", " &lt;&lt; aux.nome &lt;&lt; ", " &lt;&lt; aux.cidade &lt;&lt; ", " &lt;&lt; aux.esporte &lt;&lt; ", " &lt;&lt; aux.evento &lt;&lt; ", " &lt;&lt; aux.noc &lt;&lt; endl;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; out &lt;&lt; aux.id &lt;&lt; ", " &lt;&lt; aux.nome &lt;&lt; ", " &lt;&lt; aux.cidade &lt;&lt; ", " &lt;&lt; aux.esporte &lt;&lt; ", " &lt;&lt; aux.evento &lt;&lt; ", " &lt;&lt; aux.noc &lt;&lt; endl;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">}</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">void operacoes::exibir(long posIni, long posFim, bool eParaImprimirTudo) {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">void operacoes::exibir(long posIni, long posFim, bool eParaImprimirTudo) {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; info aux;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; info aux;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; posIni *= sizeof(aux);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; posIni *= sizeof(aux);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; bool elementoEncontrado = false;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; bool elementoEncontrado = false;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; int cont = 0;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; int cont = 0;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; ifstream arquivobi("csv_em_binario.dat", ios::binary);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; ifstream arquivobi("csv_em_binario.dat", ios::binary);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; </span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; cout &lt;&lt; "Deseja imprimir os elementos na TELA ou em um ARQUIVO(recomendado)? ([T]/[A]) ";</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; cout &lt;&lt; "Deseja imprimir os elementos na TELA ou em um ARQUIVO(recomendado)? ([T]/[A]) ";</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; char opcao;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; char opcao;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; cin &gt;&gt; opcao;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; cin &gt;&gt; opcao;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; ofstream novoTxt;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; if (eParaImprimirTudo) {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; if (opcao == 'T' or opcao == 't') {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; ofstream novoTxt("todos-os-registros.txt");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "ID, NOME, CIDADE, ESPORTE, EVENTO, NOC" &lt;&lt; endl;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; while (!arquivobi.eof()) {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; } else {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; arquivobi.read((char*)&amp;aux, sizeof(aux));</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; novoTxt.open("registros-IDs:" + to_string(posIni / sizeof(aux)) + "-" + to_string(posFim) + ".txt");</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (opcao == 'T' or opcao == 't') {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; novoTxt &lt;&lt; "ID, NOME, CIDADE, ESPORTE, EVENTO, NOC" &lt;&lt; endl;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; funcaoImprime(cout, aux);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; }</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else if (opcao == 'A' or opcao == 'a') {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; if (eParaImprimirTudo) {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; funcaoImprime(novoTxt, aux);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; ofstream novoTxt("todos-os-registros.txt");</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; novoTxt &lt;&lt; "ID, NOME, CIDADE, ESPORTE, EVENTO, NOC" &lt;&lt; endl;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cont += sizeof(aux);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; while (!arquivobi.eof()) {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; }</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; arquivobi.read((char*)&amp;aux, sizeof(aux));</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; } else {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (opcao == 'T' or opcao == 't') {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; arquivobi.seekg(posIni);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; funcaoImprime(cout, aux);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; while (!arquivobi.eof() and !(elementoEncontrado)) {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else if (opcao == 'A' or opcao == 'a') {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; arquivobi.read((char*)&amp;aux, sizeof(aux));</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; funcaoImprime(novoTxt, aux);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (opcao == 'T' or opcao == 't') {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; funcaoImprime(cout, aux);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cont += sizeof(aux);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else if (opcao == 'A' or opcao == 'a') {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; }</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ofstream novoTxt("registros-ID-" + to_string(posIni/sizeof(aux)) + "-" + to_string(posFim) + ".txt");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; } else {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; funcaoImprime(novoTxt, aux);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; arquivobi.seekg(posIni);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; while (!arquivobi.eof() and !(elementoEncontrado)) {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (aux.id == posFim) {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; arquivobi.read((char*)&amp;aux, sizeof(aux));</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; elementoEncontrado = true;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (opcao == 'T' or opcao == 't') {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; funcaoImprime(cout, aux);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; }</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else if (opcao == 'A' or opcao == 'a') {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; }</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; funcaoImprime(novoTxt, aux);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; arquivobi.close();</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (aux.id == posFim) {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; elementoEncontrado = true;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">void operacoes::alterar(long id) {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; }</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; //altera binario na posicao do id</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; }</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; string nome, cidade, esporte, evento, noc;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; novoTxt.close();</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; info aux;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; arquivobi.close();</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; fstream arquivobi("csv_em_binario.dat", ios::binary | ios::in | ios::out);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">}</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; arquivobi.seekp(id * sizeof(aux));</span></code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; aux.id = id;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; cout &lt;&lt; "Digite o novo nome(maximo 108 caracteres): ";</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">void operacoes::alterar(long id) {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; getline(cin &gt;&gt; ws, nome);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; //altera binario na posicao do id</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; strcpy(aux.nome, (nome.substr(0, TAM_NOME - 1)).c_str());</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; string nome, cidade, esporte, evento, noc;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; cout &lt;&lt; "Digite a nova cidade(maximo 22 caracteres): ";</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; info aux;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; getline(cin &gt;&gt; ws, cidade);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; fstream arquivobi("csv_em_binario.dat", ios::binary | ios::in | ios::out);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; strcpy(aux.cidade, (cidade.substr(0, TAM_CIDADE - 1)).c_str());</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; arquivobi.seekp(id * sizeof(aux));</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; cout &lt;&lt; "Digite o novo esporte(maximo 25 caracteres): ";</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; aux.id = id;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; getline(cin &gt;&gt; ws, esporte);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; cout &lt;&lt; "Digite o novo nome(maximo 108 caracteres): ";</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; strcpy(aux.esporte, (esporte.substr(0, TAM_ESPORTE - 1)).c_str());</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; getline(cin &gt;&gt; ws, nome);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; cout &lt;&lt; "Digite o novo evento(maximo 87 caracteres): ";</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; strcpy(aux.nome, (nome.substr(0, TAM_NOME - 1)).c_str());</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; getline(cin &gt;&gt; ws, evento);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; cout &lt;&lt; "Digite a nova cidade(maximo 22 caracteres): ";</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; strcpy(aux.evento, (evento.substr(0, TAM_EVENTO - 1)).c_str());</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; getline(cin &gt;&gt; ws, cidade);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; cout &lt;&lt; "Digite o novo noc(maximo 3 caracteres): ";</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; strcpy(aux.cidade, (cidade.substr(0, TAM_CIDADE - 1)).c_str());</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; getline(cin &gt;&gt; ws, noc);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; cout &lt;&lt; "Digite o novo esporte(maximo 25 caracteres): ";</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; strcpy(aux.noc, (noc.substr(0, TAM_NOC - 1)).c_str());</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; getline(cin &gt;&gt; ws, esporte);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; arquivobi.write((char*)&amp;aux, sizeof(aux));</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; strcpy(aux.esporte, (esporte.substr(0, TAM_ESPORTE - 1)).c_str());</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; arquivobi.close();</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; cout &lt;&lt; "Digite o novo evento(maximo 87 caracteres): ";</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; getline(cin &gt;&gt; ws, evento);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; strcpy(aux.evento, (evento.substr(0, TAM_EVENTO - 1)).c_str());</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; cout &lt;&lt; "Digite o novo noc(maximo 3 caracteres): ";</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">int main() {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; getline(cin &gt;&gt; ws, noc);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; ifstream testa;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; strcpy(aux.noc, (noc.substr(0, TAM_NOC - 1)).c_str());</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; testa.open("csv_em_binario.dat");</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; arquivobi.write((char*)&amp;aux, sizeof(aux));</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; if (testa) {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; arquivobi.close();</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "O arquivo binario ja existe convertido neste diretorio." &lt;&lt; endl;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; } else {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">}</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "Convertendo arquivo CSV para binário..." &lt;&lt; endl;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; leCSV arqCSV;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">void operacoes::inserir(long pos) {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; }</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; //inserir em uma posicao especifica do arquivo binario</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; //assim que declarado faz toda a operação de converter o csv para binário</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; </span>&nbsp;</code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; operacoes op;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">}</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; //arrumar que so pode ser convertido uma vez</span></code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; int opcao;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">void operacoes::trocar(long pos1, long pos2) {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; cout &lt;&lt; "O que deseja fazer?: " &lt;&lt; endl</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; //troca dois elementos de suas posicoes do arquivo binario</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "1 - Adicionar um elemento no arquivo binario em uma posicao especifica " &lt;&lt; endl</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">}</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "2 - Visualizar os registros entre a posicao x e y." &lt;&lt; endl</span></code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "3 - Alterar os dados de um registro em uma posicao especifica." &lt;&lt; endl</span></code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "4 - Trocar dois registros de posicao no arquivo." &lt;&lt; endl</span></code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "5 - Imprimir todos os registros do arquivo binario, na ordem em que estao armazenados." &lt;&lt; endl</span></code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "6 - SAIR" &lt;&lt; endl;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">int main() {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; do {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; ifstream testa;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; cin &gt;&gt; opcao;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; testa.open("csv_em_binario.dat");</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "Voce escolheu ";</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; if (testa) {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; switch (opcao) {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "O arquivo binario ja existe convertido neste diretorio." &lt;&lt; endl;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; case 1:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; } else {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "adicionar um elemento no arquivo binario em uma posicao especifica " &lt;&lt; endl;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "Convertendo arquivo CSV para binário..." &lt;&lt; endl;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; leCSV arqCSV;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; case 2:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; }</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "visualizar os registros entre a posicao x e y." &lt;&lt; endl;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; //assim que declarado faz toda a operação de converter o csv para binário</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "Digite a posicao inicial do intervalo que deseja visualizar: ";</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; operacoes op;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int posIni;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; //arrumar que so pode ser convertido uma vez</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cin &gt;&gt; posIni;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; int opcao;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "Agora a posicao final: ";</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; cout &lt;&lt; "O que deseja fazer?: " &lt;&lt; endl</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int posFim;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "1 - Adicionar um elemento no arquivo binario em uma posicao especifica " &lt;&lt; endl</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cin &gt;&gt; posFim;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "2 - Visualizar os registros entre a posicao x e y." &lt;&lt; endl</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; op.exibir(posIni, posFim, false);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "3 - Alterar os dados de um registro em uma posicao especifica." &lt;&lt; endl</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "4 - Trocar dois registros de posicao no arquivo." &lt;&lt; endl</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; case 3:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "5 - Imprimir todos os registros do arquivo binario, na ordem em que estao armazenados." &lt;&lt; endl</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "alterar os dados de um registro em uma posicao especifica." &lt;&lt; endl;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "6 - SAIR" &lt;&lt; endl;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "Digite o ID do registro que deseja alterar: ";</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; do {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; long id;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; cin &gt;&gt; opcao;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cin &gt;&gt; id;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "Voce escolheu ";</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; op.alterar(id);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; switch (opcao) {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; case 1:</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; case 4:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "adicionar um elemento no arquivo binario em uma posicao especifica " &lt;&lt; endl;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "trocar dois registros de posicao no arquivo." &lt;&lt; endl;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "Digite a posicao que deseja inserir o elemento: ";</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; long pos;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; case 5:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cin &gt;&gt; pos;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "imprimir todos os registros do arquivo binario, na ordem em que estao armazenados." &lt;&lt; endl;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; op.inserir(pos);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; op.exibir(0, 0, true);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; case 2:</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; case 6:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "visualizar os registros entre a posicao x e y." &lt;&lt; endl;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "sair" &lt;&lt; endl;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "Digite a posicao inicial do intervalo que deseja visualizar: ";</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int posIni;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; default:</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cin &gt;&gt; posIni;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "uma opcao invalida" &lt;&lt; endl;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "Agora a posicao final: ";</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int posFim;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; }</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cin &gt;&gt; posFim;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; if (opcao != 6) {</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; op.exibir(posIni, posFim, false);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "O que deseja fazer?: " &lt;&lt; endl</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "1 - Adicionar um elemento no arquivo binario em uma posicao especifica " &lt;&lt; endl</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; case 3:</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "2 - Visualizar os registros entre a posicao x e y." &lt;&lt; endl</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "alterar os dados de um registro em uma posicao especifica." &lt;&lt; endl;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "3 - Alterar os dados de um registro em uma posicao especifica." &lt;&lt; endl</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "Digite o ID do registro que deseja alterar: ";</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "4 - Trocar dois registros de posicao no arquivo." &lt;&lt; endl</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; long id;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "5 - Imprimir todos os registros do arquivo binario, na ordem em que estao armazenados." &lt;&lt; endl</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cin &gt;&gt; id;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "6 - SAIR" &lt;&lt; endl;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; op.alterar(id);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; } while (opcao != 6);</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; return 0;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; case 4:</span></code></td>
</tr>
<tr>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "trocar dois registros de posicao no arquivo." &lt;&lt; endl;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; case 5:</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "imprimir todos os registros do arquivo binario, na ordem em que estao armazenados." &lt;&lt; endl;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; op.exibir(0, 0, true);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; case 6:</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "sair" &lt;&lt; endl;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; default:</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "uma opcao invalida" &lt;&lt; endl;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; }</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; if (opcao != 6) {</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; "O que deseja fazer?: " &lt;&lt; endl</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "1 - Adicionar um elemento no arquivo binario em uma posicao especifica " &lt;&lt; endl</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "2 - Visualizar os registros entre a posicao x e y." &lt;&lt; endl</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "3 - Alterar os dados de um registro em uma posicao especifica." &lt;&lt; endl</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "4 - Trocar dois registros de posicao no arquivo." &lt;&lt; endl</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "5 - Imprimir todos os registros do arquivo binario, na ordem em que estao armazenados." &lt;&lt; endl</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&lt; "6 - SAIR" &lt;&lt; endl;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; &nbsp; &nbsp; }</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; } while (opcao != 6);</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">&nbsp; &nbsp; return 0;</span></code></td>
</tr>
<tr>
<td class="ln"></td><td></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf3b2">}</span></code></td>
</tr>
</tbody>
</table>
</body>
</html>
